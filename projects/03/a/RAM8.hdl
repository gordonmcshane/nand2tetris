// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address,a=load1,b=load2,c=load3,d=load4,e=load5,f=load6,g=load7,h=load8);
    Register(in=in,out=mux1,load=load1);
    Register(in=in,out=mux2,load=load2);
    Register(in=in,out=mux3,load=load3);
    Register(in=in,out=mux4,load=load4);
    Register(in=in,out=mux5,load=load5);
    Register(in=in,out=mux6,load=load6);
    Register(in=in,out=mux7,load=load7);
    Register(in=in,out=mux8,load=load8);
    Mux8Way16(a=mux1,b=mux2,c=mux3,d=mux4,e=mux5,f=mux6,g=mux7,h=mux8,sel=address,out=out);
}